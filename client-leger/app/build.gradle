plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'jacoco' // <-- Add this
}

android {
    namespace 'com.auth0.androidlogin'
    compileSdk 34

    defaultConfig {
        applicationId "com.auth0.androidlogin"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0"

        manifestPlaceholders = [auth0Domain: "@string/com_auth0_domain", auth0Scheme: "@string/com_auth0_scheme"]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    // JaCoCo configuration
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
                excludeClassLoaders = ['jdk.internal.*']
            }
        }
    }

    lint {
        baseline = file("lint-baseline.xml")
    }
}

dependencies {
    // Other dependencies
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.8.0' // Updated Material Components dependency
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.firebase:firebase-firestore-ktx:25.1.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'io.mockk:mockk:1.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'com.auth0.android:auth0:2.+'
    implementation 'com.auth0.android:jwtdecode:2.+'

    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'

    implementation 'io.socket:socket.io-client:2.0.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-datetime:0.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.7"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.8.7"
    implementation "androidx.activity:activity-ktx:1.9.3"
}


// Configure the JaCoCo report
jacoco {
    toolVersion = "0.8.7" // Use the appropriate version of JaCoCo
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {
    reports {
        xml.required = true
        html.required = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "$buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)

    sourceDirectories.setFrom(files(['src/main/java', 'src/main/kotlin']))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: "$buildDir", includes: ['jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec']))
}
